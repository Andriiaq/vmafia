# -*- coding: utf-8 -*-
import config
import telebot
from telebot import types
import psycopg2

DATABASE_URL = 'postgres://wommmmevwhfpyr:1b5d073a1c84d111c9969c64494ba324f5260049ce5b9f0672885ded3616fcbd@ec2-54-246-89-234.eu-west-1.compute.amazonaws.com:5432/d44hnvrm79hna6'
conn = psycopg2.connect(DATABASE_URL, sslmode='require')
cur = conn.cursor()

bot = telebot.TeleBot(config.token)
GROUP_ID = -1001229855041

#
# –ê–∫—Ç–∏–≤
temp_uids = []
uids = []
cur.execute("SELECT uids FROM active")
uids = [a[0] for a in cur.fetchall()]
# print(uids)


# cur.execute("DELETE FROM active")
cur.execute("SELECT msgid FROM delmsg")
cur.execute("DELETE FROM delmsg")
conn.commit()


@bot.message_handler(commands=['–∞–∫—Ç–∏–≤'])
def active(msg):
    if not msg.chat.id == GROUP_ID:
        bot.send_message(msg.chat.id,
                         '<a href="tg://user?id={}">{}</a>, —á—É—î—à, –∑–ª–æ–¥—ñ—è–∫–∞, —Ü–µ–π –±–æ—Ç –ø—Ä–∞—Ü—é—î –ª–∏—à–µ —É —á–∞—Ç—ñ @vmafia.üòÅ'.format(
                             msg.from_user.id, msg.from_user.first_name), parse_mode="HTML")
    else:
        admins = [admin.user.id for admin in bot.get_chat_administrators(msg.chat.id)]
        if msg.from_user.id in admins:
            temp_uids.clear()
            keyboard = types.InlineKeyboardMarkup()
            keyboard.row(
                types.InlineKeyboardButton(text='–¢–∞–∫, –ø–æ–∫–ª–∏—á—Ç–µ –º–µ–Ω–µ ü•∞', callback_data='text1')
            )
            keyboard.row(
                types.InlineKeyboardButton(text='–ù–µ –∫–ª–∏—á—Ç–µ –º–µ–Ω–µ üòï‚Äç', callback_data='text2')
            )
            bot.send_message(msg.chat.id, text='<b>–®–æ–æ–æ–æ–æ–æ–æ–æ–æ–π</b>, –¥–æ –±–æ—é, <b>–ú–∏—Ä–Ωi</b>! üòÇüêí‚ô•Ô∏è', parse_mode='html')
            if len(uids) == 0:
                bot.send_message(msg.chat.id, '–ë—É–¥—å –ø–µ—Ä—à–∏–º')
            else:
                i = 0
                link = ''
                for uid in uids:
                    link += '<a href="tg://user?id={id}">{name}</a>, '.format(id=uid,
                                                                              name=bot.get_chat_member(msg.chat.id,
                                                                                                       uid).user.first_name)
                    i += 1
                    if i % 5 == 0:
                        bot.send_message(msg.chat.id, link[:-2], parse_mode='html')
                        link = ''
                if link:
                    bot.send_message(msg.chat.id, link[:-2], parse_mode='html')
                bot.send_message(msg.chat.id, '‚Äå‚Äå‚Äé‚Äå‚Äå‚Äé', parse_mode='html')
            bot.send_message(msg.chat.id,
                             '–•–æ—á–µ—à, —â–æ–± —Ç–µ–±–µ —Ç–∞–∫–æ–∂ <b>–∫–ª–∏–∫–∞–ª–∏ –≤ –≥—Ä—É</b>? <b>–î–æ–¥–∞–π</b> –∞–±–æ <b>–≤–∏–¥–∞–ª–∏</b> —Å–µ–±–µ —Å–∞–º. –û–±—ñ—Ü—è—î–º–æ, —â–æ <b>–Ω–∞–¥–æ–∫—É—á–∞—Ç–∏ –Ω–µ –±—É–¥–µ–º–æ.</b> ‚ô•',
                             reply_markup=keyboard, parse_mode='html')
        else:
            cur.execute("SELECT msgid FROM delmsg")
            msgid = cur.fetchone()
            print(msgid)
            bot.delete_message(msg.chat.id, msg.message_id)
            if not msgid == None:
                bot.delete_message(msg.chat.id, msgid)
                cur.execute("DELETE FROM delmsg")
                conn.commit()
            msgadm = bot.send_message(msg.chat.id,
                                      '<a href="tg://user?id={}">{}</a>, –∞–∫—Ç–∏–≤ –º–æ–∂—É—Ç—å –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ª–∏—à–µ –∞–¥–º—ñ–Ω–∏.üòÅ'.format(
                                          msg.from_user.id, msg.from_user.first_name), parse_mode="HTML")
            cur.execute("INSERT INTO delmsg (msgid) VALUES (%s)", [msgadm.message_id])
            conn.commit()
            print(msgid)


@bot.callback_query_handler(func=lambda c: True)
def active(call):
    uid = call.from_user.id
    temp_uid = call.from_user.id
    temp_uname = bot.get_chat_member(call.message.chat.id, call.from_user.id).user.first_name
    link = ""
    if not bot.get_chat_member(call.message.chat.id, call.from_user.id).status == 'left':
        if call.data == 'text1':
            if uid in uids:
                bot.answer_callback_query(callback_query_id=call.id, text='–¢–∏ –≤–∂–µ —î —É —Å–ø–∏—Å–∫—É.')
            else:
                cur.execute("INSERT INTO active (uids) VALUES (%s)", [call.from_user.id])
                conn.commit()
                uids.append(uid)
                bot.answer_callback_query(callback_query_id=call.id, text='–¢–µ–±–µ –¥–æ–¥–∞–Ω–æ –¥–æ —Å–ø–∏—Å–∫—É.')
                temp_uids.append(temp_uid)
                for temp_uid in temp_uids:
                    link += '<a href="tg://user?id={id}">{name}</a>, '.format(
                        name=bot.get_chat_member(call.message.chat.id, temp_uid).user.first_name, id=temp_uid)
                bot.edit_message_text(text='''–î–æ–¥–∞–Ω–æ –≤ <b>–Ω–∞—Å—Ç—É–ø–Ω–∏–π</b> –∞–∫—Ç–∏–≤:
''' + link[:-2], parse_mode='HTML', chat_id=call.message.chat.id, message_id=call.message.message_id - 1)
        elif call.data == 'text2':
            if len(uids) == 0 or uid not in uids:
                bot.answer_callback_query(callback_query_id=call.id, text='–¢–µ–±–µ –Ω–µ–º–∞—î –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –∞–∫—Ç–∏–≤—ñ.')
            else:
                cur.execute('DELETE FROM active WHERE uids = %s', [call.from_user.id])
                conn.commit()
                uids.remove(uid)
                bot.answer_callback_query(callback_query_id=call.id, text='–¢–µ–±–µ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∞–∫—Ç–∏–≤—É.')
                if temp_uid in temp_uids:
                    temp_uids.remove(temp_uid)
                    if len(temp_uids) == 0:
                        bot.edit_message_text(text='‚Äå‚Äå‚Äé‚Äå‚Äå‚Äé', parse_mode='HTML', chat_id=call.message.chat.id,
                                              message_id=call.message.message_id - 1)
                if not len(temp_uids) == 0:
                    for temp_uid in temp_uids:
                        link += '<a href="tg://user?id={id}">{name}</a>, '.format(name=temp_uname, id=temp_uid)
                    bot.edit_message_text(text='''–î–æ–¥–∞–Ω–æ –≤ <b>–Ω–∞—Å—Ç—É–ø–Ω–∏–π</b> –∞–∫—Ç–∏–≤:
''' + link[:-2], parse_mode='HTML', chat_id=call.message.chat.id, message_id=call.message.message_id - 1)
    else:
        bot.answer_callback_query(callback_query_id=call.id, text='–¢–∏ –Ω–µ —É—á–∞—Å–Ω–∏–∫ —á–∞—Ç—É.')


#
# –ö–æ–º–∞–Ω–¥–∏

@bot.message_handler(regexp='!–≥–∞–π–¥')
def triggers(msg):
    cid = msg.chat.id
    id = msg.from_user.id
    user_name = msg.from_user.first_name
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text='–ß–∏—Ç–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏', url='https://t.me/vmbook')
    keyboard.add(url_button)
    bot.send_message(cid, text='''\
    –Ø–∫—â–æ —Ç–∏ –Ω–æ–≤–∏–π –≥—Ä–∞–≤–µ—Ü—å, —Ç–æ –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∏–∂—á–µ, —â–æ–± –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏. üåπ
    '''.format(id, user_name), parse_mode='HTML', reply_markup=keyboard)


@bot.message_handler(regexp="!—Ö–æ–¥–∏")
def triggers(msg):
    cid = msg.chat.id
    id = msg.from_user.id
    user_name = msg.from_user.first_name
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="–í–∏–∫–æ–Ω–∞—Ç–∏ –¥—ñ—ó", url="https://t.me/TrueMafiaBot")
    keyboard.add(url_button)
    bot.send_message(cid, text='''\
*–£–≤–∞–≥–∞! –ó–∞—Ä–∞–∑ –Ω—ñ—á!* –ì—Ä–∞–≤—Ü—ñ –≤–∏–∫–æ–Ω—É—é—Ç—å *—Ç–∞—î–º–Ω—ñ –¥—ñ—ó* –≤ –¥—ñ–∞–ª–æ–∑—ñ –∑ –±–æ—Ç–æ–º @TrueMafiaBot, –∞ –≤ —á–∞—Ç—ñ –ø–∞–Ω—É—î –ø–æ–≤–Ω–∞ —Ç–∏—à–∞(–±–æ—Ç –≤–∏–¥–∞–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ —Ç–∏–º—á–∞—Å–æ–≤–æ –±–ª–æ–∫—É—î –∑–∞ —Å–ø—Ä–æ–±–∏ –Ω–∞–ø–∏—Å–∞—Ç–∏).
    '''.format(id, user_name), parse_mode="Markdown", reply_markup=keyboard)


@bot.message_handler(content_types=["new_chat_members"])
def triggers(msg):
    if not msg.new_chat_member.is_bot == True:
        cid = msg.chat.id
        uid = msg.new_chat_member.id
        user_name = msg.new_chat_member.first_name
        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–ß–∏—Ç–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞", url="https://t.me/vmbook")
        keyboard.add(url_button)
        bot.send_message(cid, text='''\
    –ê –Ω—É –≤—Å—ñ —à–≤–∏–¥–µ–Ω—å–∫–æ <b>–ø—Ä–∏–≤—ñ—Ç–∞–ª–∏ –Ω–æ–≤–æ–≥–æ –≥—Ä–∞–≤—Ü—è</b> <a href="tg://user?id={}">{}</a>! üåù  –ó–∞—Ö–æ–¥—å —Ç–∞ –≤–ª–∞—à—Ç–æ–≤—É–π—Å—è –ø–æ–∑—Ä—É—á–Ω—ñ—à–µ, <b>–±—Ä–æ</b>! ‚ô•

    <b>–†–∞–¥—ñ —Ç–æ–±—ñ</b> —É –Ω–∞—à–æ–º—É –¥—Ä—É–∂–Ω—å–æ–º—É —á–∞—Ç—ñ. –¢—É—Ç –ª–∏—à–µ <b>—Ö–æ—Ä–æ—à—ñ</b> –ª—é–¥–∏ —Ç–∞ –ø—Ä–∏—î–º–Ω–∞ <b>–∞—Ç–º–æ—Å—Ñ–µ—Ä–∞. –û—Å–Ω–æ–≤–Ω–∞ –≥—Ä–∞</b> —É –º–∞—Ñ—ñ—é –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è <b>–æ 21:00</b>. –î–æ–ª—É—á–∞–π—Å—è! üåπ
    '''.format(uid, user_name), parse_mode="HTML", reply_markup=keyboard)
        cur.execute("INSERT INTO active (uids) VALUES (%s)", [uid])
        conn.commit()
        uids.append(uid)


@bot.message_handler(content_types=["left_chat_member"])
def triggers(msg):
    uid = msg.left_chat_member.id
    if uid in uids:
        cur.execute('DELETE FROM active WHERE uids = %s', [uid])
        uids.remove(uid)
        conn.commit()


if __name__ == '__main__':
     bot.polling(none_stop=True)